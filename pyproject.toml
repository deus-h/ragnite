[tool.poetry]
name = "ragnite"
version = "0.1.0"
description = "RAGNITE: A production-ready RAG framework leveraging the latest advances in retrieval techniques"
authors = ["RAGNITE Team"]
readme = "README.md"
license = "MIT"
repository = "https://github.com/yourusername/ragnite"
documentation = "https://github.com/yourusername/ragnite/docs"
keywords = ["rag", "ai", "nlp", "retrieval", "generation"]
packages = [
    { include = "tools" },
    { include = "utils" },
]
# Set to false if you don't want to install the project as a package
package-mode = true

[tool.poetry.dependencies]
python = "^3.10"
# Core dependencies
langchain = ">=0.0.267"
langchain-openai = ">=0.0.2"
openai = ">=1.0.0"
anthropic = ">=0.6.0"
tiktoken = ">=0.4.0"
cohere = ">=4.32"
mistralai = ">=0.0.9"
python-dotenv = ">=1.0.0"
google-generativeai = ">=0.3.0"  # Google Gemini API
# Note: xAI SDK for Grok not yet publicly available

# Vector databases clients - Note: actual DB installations managed by Conda/Docker
faiss-cpu = ">=1.7.4"
pinecone-client = ">=2.2.2"
weaviate-client = ">=3.24.1"
chromadb = ">=0.4.18"
qdrant-client = ">=1.6.0"
pgvector = ">=0.2.1"
psycopg2-binary = ">=2.9.7"

# Document processing
unstructured = ">=0.10.30"
pdf2image = ">=1.16.3"
pytesseract = ">=0.3.10"
beautifulsoup4 = ">=4.12.2"
markdown = ">=3.4.4"
python-docx = ">=0.8.11"
pypdf = ">=3.15.1"

# Embeddings - Note: PyTorch/TensorFlow managed by Conda for GPU support
sentence-transformers = ">=2.2.2"
transformers = ">=4.33.2"
accelerate = ">=0.23.0"

# Evaluation
ragas = ">=0.0.18"
evaluate = ">=0.4.0"
rouge-score = ">=0.1.2"
bert-score = ">=0.3.13"

# Utilities
numpy = ">=1.24.3"
pandas = ">=2.0.3"
matplotlib = ">=3.7.2"
plotly = ">=5.16.1"
tqdm = ">=4.66.1"
pydantic = ">=2.3.0"

# Web and API
fastapi = ">=0.103.1"
uvicorn = ">=0.23.2"
streamlit = ">=1.26.0"
gradio = ">=3.41.2"

# Caching & Performance
redis = ">=4.6.0"
diskcache = ">=5.6.1"
requests-cache = ">=1.1.0"
aiohttp = ">=3.8.5"
aiocache = ">=0.12.1"

# Ollama Integration
ollama = ">=0.1.0"

# Debugging & Monitoring
logging-plus = ">=0.0.6"
prometheus-client = ">=0.16.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.2"
pytest-cov = ">=4.1.0"
black = ">=23.7.0"
isort = ">=5.12.0"
mypy = ">=1.5.1"
ruff = ">=0.0.290"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=ragnite"

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "I", "W"]
ignore = [] 